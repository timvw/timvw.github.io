<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WordPress on Tim Van Wassenhove&#39;s blog</title>
    <link>/tags/WordPress/</link>
    <description>Recent content in WordPress on Tim Van Wassenhove&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 Aug 2007 00:00:00 +0000</lastBuildDate><atom:link href="/tags/WordPress/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>WordPress: Import Blogroll from Sage</title>
      <link>/post/2007-08-25-wordpress-import-blogroll-from-sage/</link>
      <pubDate>Sat, 25 Aug 2007 00:00:00 +0000</pubDate>
      
      <guid>/post/2007-08-25-wordpress-import-blogroll-from-sage/</guid>
      <description>
        
          &lt;p&gt;Earlier today i exported the list with blogs i read from &lt;a href=&#34;http://sage.mozdev.org/&#34;&gt;Sage&lt;/a&gt; and tried to import them into &lt;a href=&#34;http://wordpress.org&#34;&gt;WordPress&lt;/a&gt;. Although all the entries had been processed but none of them appeared. Apparently you have to rename the xmlUrl attribute to htmlUrl in the &lt;a href=&#34;http://en.wikipedia.org/wiki/OPML&#34;&gt;OPML&lt;/a&gt; file. With Vim that&amp;rsquo;s as simple as &amp;ldquo;:%s/xmlUrl/htmlUrl/g&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Anyway, feel free to see if you find anything interesting in the &lt;a href=&#34;http://www.timvw.be/wp-links-opml.php&#34;&gt;list of blogs i&amp;rsquo;m reading&lt;/a&gt;.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Adding support for localization to a WordPress plugin</title>
      <link>/post/2006-03-19-adding-support-for-localization-to-a-wordpress-plugin/</link>
      <pubDate>Sun, 19 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>/post/2006-03-19-adding-support-for-localization-to-a-wordpress-plugin/</guid>
      <description>
        
          &lt;p&gt;WordPress uses &lt;a href=&#34;http://www.gnu.org/software/gettext/&#34;&gt;GNU gettext&lt;/a&gt;, as explained in &lt;a href=&#34;http://codex.wordpress.org/Localizing_WordPress&#34;&gt;Translating WordPress&lt;/a&gt; and &lt;a href=&#34;http://codex.wordpress.org/Writing_a_Plugin&#34;&gt;Writing a Plugin&lt;/a&gt;, for &lt;a href=&#34;http://en.wikipedia.org/wiki/Software_localization&#34;&gt;localization&lt;/a&gt;. I decided that my plugins should support l10n too. Here is how i realised it:&lt;/p&gt;
&lt;p&gt;I started with defining the WPLANG constant in my wp-config.php:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;define&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;WPLANG&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;en_EN&amp;#39;&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then i changed the beginning of my localized plugin as following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;Plugin Name: WP-SpamFilter
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;Version: 0.4
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;Plugin URI: http://timvw.madoka.be/?p=533
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;Description: Mark the new comment as spam if the sender is in the spammers list.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;Author URI: http://timvw.be
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;*/&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;// If this function does not exist it means that the file is accessed directly.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Accessing this file directly is not allowed.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;function_exists&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;load_plugin_textdomain&amp;#39;&lt;/span&gt;)) {
&lt;span style=&#34;color:#66d9ef&#34;&gt;exit&lt;/span&gt;;
}

&lt;span style=&#34;color:#a6e22e&#34;&gt;load_plugin_textdomain&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wp_spamfilter&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wp-content/plugins/wp-spamfilter&amp;#39;&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In wp-includes/wp-l10n.php you see that the result of this call is that the locale and the path are used to determine the mo-file to be loaded. Because this function uses ABSPATH it&amp;rsquo;s impossible to use dirname(&lt;strong&gt;FILE&lt;/strong&gt;) as path parameter&lt;/p&gt;
&lt;p&gt;The _e($string, $domain) function echos a localized string and the __($string, $domain) function returns a localized string that you can use in function calls etc&amp;hellip; Below you can see an example of the original version and the updated version with localization support:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## some string
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;some other string&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## &amp;lt;?php _e(&amp;#39;some string&amp;#39;, &amp;#39;wp_spamfilter&amp;#39;); ?&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;__&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;some other string&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wp_spamfilter&amp;#39;&lt;/span&gt;)); &lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then i used xgettext to extract all the strings that should be localized into wp_spamfilter-en_eN.po:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-dos&#34; data-lang=&#34;dos&#34;&gt;xgettext --keyword=__ --keyword=_e --default-domain=wordpress --language=php *.php --output=wp_spamfilter-en_EN.po
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After that i editted the po file and i compiled a mo file with it using msgfmt:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-dos&#34; data-lang=&#34;dos&#34;&gt;msgfmt wp_spamfilter-en_eN.po -o wp_spamfilter-en_eN.mo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once i had made sure that wp_spamfilter-en_eN.mo was readable by my webserver i was ready.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Internationalizing strings with variables</title>
      <link>/post/2006-03-19-internationalizing-strings-with-variables/</link>
      <pubDate>Sun, 19 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>/post/2006-03-19-internationalizing-strings-with-variables/</guid>
      <description>
        
          &lt;p&gt;Yesterday i wrote that you can use __($string, $domain) and _e($string, $domain) to internationalize a string with &lt;a href=&#34;http://www.wordpress.org&#34;&gt;WordPress&lt;/a&gt;. I forgot to mention that if you use &lt;a href=&#34;http://www.php.net/sprintf&#34;&gt;sprintf&lt;/a&gt; you can handle strings with variables too. An example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sprintf&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;__&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;There are %d monkeys in the %s&amp;#39;&lt;/span&gt;), $domain), $number, $location);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
    <item>
      <title>Plugin template for WordPress</title>
      <link>/post/2006-03-19-plugin-template-for-wordpress/</link>
      <pubDate>Sun, 19 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>/post/2006-03-19-plugin-template-for-wordpress/</guid>
      <description>
        
          &lt;p&gt;Today i&amp;rsquo;ve been cleaning up my code. All my plugins live in a directory %plugin_name% under the wp-content/plugins directory. Here is the code for %plugin_name%/%plugin_name%.php&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;Plugin Name: %plugin_name%
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;Version: %plugin_version%
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;Plugin URI: %plugin_uri%
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;Description: %plugin_description%
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;Author URI: %plugin_author_uri%
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;*/&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;// Direct access is not allowed.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;function\_exists&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;load_plugin_textdomain&amp;#39;&lt;/span&gt;)) {
&lt;span style=&#34;color:#66d9ef&#34;&gt;exit&lt;/span&gt;;
} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;span style=&#34;color:#66d9ef&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%plugin_name%.php&amp;#39;&lt;/span&gt;);
$plugin_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;substr&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;basename&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;__FILE__&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;);

&lt;span style=&#34;color:#75715e&#34;&gt;// You can add optional parameters to the constructor, eg: the wpdb instance.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;plugin_class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;plugin_class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;($plugin_name);
}
&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now it&amp;rsquo;s time to implement the %plugin_class%. Here is the template for %plugin_name%/%plugin_class%.php:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;plugin_class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; $_plugin_name;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; $_localization_domain;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; $_localization_path;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;plugin_class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;($plugin_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%plugin_name%&amp;#39;&lt;/span&gt;) {
    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_plugin_name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $plugin_name;

$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_localization_domain&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $plugin_name;
$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_localization_path&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wp-content/plugins/&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; $plugin_name;

&lt;span style=&#34;color:#75715e&#34;&gt;// You can add additional hooks and filters here.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add_action&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;activate_&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; $plugin_name &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; $plugin_name &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.php&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;$this, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;OnActivation&amp;#39;&lt;/span&gt;));
&lt;span style=&#34;color:#a6e22e&#34;&gt;add_action&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_menu&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;$this, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;OnAdminMenu&amp;#39;&lt;/span&gt;));
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OnAdminMenu&lt;/span&gt;() {
&lt;span style=&#34;color:#a6e22e&#34;&gt;load_plugin_textdomain&lt;/span&gt;($this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_localization_domain&lt;/span&gt;, $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_localization_path&lt;/span&gt;);
&lt;span style=&#34;color:#a6e22e&#34;&gt;add_options_page&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;__&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%plugin_name% Options&amp;#39;&lt;/span&gt;, $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_localization_domain&lt;/span&gt;), &lt;span style=&#34;color:#a6e22e&#34;&gt;__&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%plugin_name%&amp;#39;&lt;/span&gt;, $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_localization_domain&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;manage_options&amp;#39;&lt;/span&gt;,$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_plugin_name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_plugin_name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-options.php&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;$this, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;OnDisplayOptions&amp;#39;&lt;/span&gt;));
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OnDisplayOptions&lt;/span&gt;() {
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;plugin_class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;require&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;dirname&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;__FILE__&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_plugin_name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-options.php&amp;#39;&lt;/span&gt;);
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OnActivation&lt;/span&gt;() {
&lt;span style=&#34;color:#75715e&#34;&gt;// This code is executed when the plugin is activated.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// I prepend all my option names with $this-&amp;gt;_plugin_name.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add_option&lt;/span&gt;($this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_plugin_name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_somevar&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;);
}
}
&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The code above requires that you create a %plugin_name%/%plugin_name%-options.php file to administrate the options. Here is the template for that file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;// Direct access is not allowed.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;isset&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;plugin_class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;)) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;exit&lt;/span&gt;;
}

&lt;span style=&#34;color:#a6e22e&#34;&gt;load_plugin_textdomain&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;plugin_class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_localization_domain&lt;/span&gt;, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;plugin_class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_localization_path&lt;/span&gt;);

&lt;span style=&#34;color:#75715e&#34;&gt;// Handle post action.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ($_POST[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stage&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;process&amp;#39;&lt;/span&gt;) {
&lt;span style=&#34;color:#75715e&#34;&gt;// All the names of form variables start with %plugin_class%_plugin_name.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;isset&lt;/span&gt;($_POST[&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;plugin_class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_plugin_name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_somevar&amp;#39;&lt;/span&gt;])) {
&lt;span style=&#34;color:#75715e&#34;&gt;// Do processing here.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}
}

&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The only thing that we still have to do is generate a po file with xgettext, translate it and compile a %plugin_name%/%plugin_name%-en_EN.mo file.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Adding an action when your plugin is activated</title>
      <link>/post/2006-03-15-adding-an-action-when-your-plugin-is-activated/</link>
      <pubDate>Wed, 15 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>/post/2006-03-15-adding-an-action-when-your-plugin-is-activated/</guid>
      <description>
        
          &lt;p&gt;The WordPress documentation says that you have to call add_action(&amp;lsquo;activate_pluginurl&amp;rsquo;, &amp;lsquo;somefunction&amp;rsquo;) to trigger somefunction when your plugin is activated. Unfortunately i couldn&amp;rsquo;t find with what pluginurl should be replaced. After a bit of experimenting i&amp;rsquo;ve found that in wp-admin/plugins.php the following is called when a plugin is activated:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;do_action&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;activate_&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;trim&lt;/span&gt;( $_GET[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;plugin&amp;#39;&lt;/span&gt;] ));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So it appears that you simply have to use the path of your plugin relative to /wp-content/plugins. Eg: you have a plugin in /wp-content/plugins/wp-spamfilter/wp-spamfilter.php then you have to call add_action as following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add_action&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;activate_wp-spamfilter/wp-spamfilter.php&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;somefunction&amp;#39;&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
