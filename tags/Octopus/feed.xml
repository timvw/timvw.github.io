<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Octopus on Tim Van Wassenhove</title>
    <link>https://timvw.be/tags/Octopus/</link>
    <description>Recent content in Octopus on Tim Van Wassenhove</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Aug 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://timvw.be/tags/Octopus/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploying a Cloud Service to Azure with Octopus</title>
      <link>https://timvw.be/2014/08/15/Deploying-a-Cloud-Service-to-Azure-with-Octopus/</link>
      <pubDate>Fri, 15 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://timvw.be/2014/08/15/Deploying-a-Cloud-Service-to-Azure-with-Octopus/</guid>
      <description>Currently Octopus has limited support to deploy a Cloud Service on Azure. A typical use-case is that you need a different Web.Config file per environment. Simply add the Web.Environment.Config files to your NuGet package and use the following PreDeploy.ps1 script:
# Load unzip support [Reflection.Assembly]::LoadWithPartialName(&amp;#34;System.IO.Compression.FileSystem&amp;#34;) | Out-Null function Unzip($zipFile, $destination) { If (Test-Path $destination){	Remove-Item $destination -Recurse | Out-Null } New-Item -ItemType directory -Force -Path $destination | Out-Null [System.IO.Compression.ZipFile]::ExtractToDirectory($zipFile, $destination) | Out-Null } # Unzip deployment package  $CsPkg = &amp;#34;Customer.</description>
    </item>
    
  </channel>
</rss>
