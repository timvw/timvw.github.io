<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sts on Tim Van Wassenhove</title>
    <link>/tags/sts/</link>
    <description>Recent content in sts on Tim Van Wassenhove</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Sep 2010 00:00:00 +0000</lastBuildDate><atom:link href="/tags/sts/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>WIF: whr parameter is a hint for user Home Realm</title>
      <link>/post/2010-09-07-wif-whr-parameter-is-a-hint-for-user-home-realm/</link>
      <pubDate>Tue, 07 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>/post/2010-09-07-wif-whr-parameter-is-a-hint-for-user-home-realm/</guid>
      <description>Yesterday i was reading the Claims Based Identity &amp;amp; Access Control Guide and learned that the whr parameter is a hint from the application to the STS about the user&amp;rsquo;s STS. So if i look back at the code in WIF: Change STS per request i should not hardcode the HomeRealm parameter to timvw but use the company name instead.
string GetRedirectUrl(string company, string companySts, string realm, string returnUrl) { var signInRequestMessage = new SignInRequestMessage(new Uri(companySts), realm) { Context = returnUrl, HomeRealm = company }; return signInRequestMessage.</description>
    </item>
    
    <item>
      <title>WIF: Change STS per request</title>
      <link>/post/2010-09-05-wif-change-sts-per-request/</link>
      <pubDate>Sun, 05 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>/post/2010-09-05-wif-change-sts-per-request/</guid>
      <description>Here is some code that will redirect unauthenticated users to their respective STS (Eg: A user visiting ~/CompanyA/Default.aspx will be asked to authenticate at the STS linked to CompanyA.
Notice that in the enterprise you typically have multiple applications that require this kind of behavior, so you would solve this by establishing trust between your app(s) and your STS + establish trust between your STS and the client STSes.)
public class Global : HttpApplication { protected void wSFederationAuthenticationModule_RedirectingToIdentityProvider(object sender, RedirectingToIdentityProviderEventArgs e) { e.</description>
    </item>
    
  </channel>
</rss>
