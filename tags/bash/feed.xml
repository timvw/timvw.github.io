<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on Tim Van Wassenhove</title>
    <link>https://timvw.be/tags/bash/</link>
    <description>Recent content in Bash on Tim Van Wassenhove</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 22 Sep 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://timvw.be/tags/bash/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Copy all mp3 files in Music folder to USB dribe</title>
      <link>https://timvw.be/2012/09/22/copy-all-mp3-files-in-music-folder-to-usb-dribe/</link>
      <pubDate>Sat, 22 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://timvw.be/2012/09/22/copy-all-mp3-files-in-music-folder-to-usb-dribe/</guid>
      <description>Copying all mp3 files from my Music folder to a USB drive is pretty easy on my Macbook:
find Music -name *.mp3 -exec cp {} /Volumes/SANDISK \; </description>
    </item>
    
    <item>
      <title>Consume locally build software without overloading your $PATH</title>
      <link>https://timvw.be/2011/03/12/consume-locally-build-software-without-overloading-your-path/</link>
      <pubDate>Sat, 12 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://timvw.be/2011/03/12/consume-locally-build-software-without-overloading-your-path/</guid>
      <description>How do you consume locally build software? For a while now i have used the following approach:
 Create a ~/bin folder Add that ~/bin folder to my $PATH Add symlinks from binary to ~/bin (ln -s ~/src/git-tfs/GitTfs.Vs2010/bin/debug/git-tfs.exe git-tfs)  Please let me know about your strategy..</description>
    </item>
    
    <item>
      <title>Restore from a MySQL dumpfile</title>
      <link>https://timvw.be/2006/01/12/restore-from-a-mysql-dumpfile/</link>
      <pubDate>Thu, 12 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://timvw.be/2006/01/12/restore-from-a-mysql-dumpfile/</guid>
      <description>If you are a longtime user of mysqldump you may have experienced that restoring with mysql &amp;lt; dumpfile doesn&amp;rsquo;t always work because of referential problems. Here is a little script that takes care of it: mysql-restore.txt.</description>
    </item>
    
    <item>
      <title>Backup script</title>
      <link>https://timvw.be/2004/06/28/backup-script/</link>
      <pubDate>Mon, 28 Jun 2004 00:00:00 +0000</pubDate>
      
      <guid>https://timvw.be/2004/06/28/backup-script/</guid>
      <description>The current shell server i am using returns bogus output for commands like df. Mind the negative value for 1-k blocks.
timvw@localhost:~$ df
&amp;lt;td&amp;gt; 1k-blocks &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; Used &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; Available &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; Use% &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; Mounted on &amp;lt;/td&amp;gt;  &amp;lt;td&amp;gt; &amp;lt;b&amp;gt;-780429856382&amp;lt;/b&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; 1 &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; 74% &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; / &amp;lt;/td&amp;gt;  It thought it would be a good idea to have a backup once in a while, but most of the times when i did it, i forgot to backup my database.</description>
    </item>
    
    <item>
      <title>Listen to online radio</title>
      <link>https://timvw.be/2004/05/21/listen-to-online-radio/</link>
      <pubDate>Fri, 21 May 2004 00:00:00 +0000</pubDate>
      
      <guid>https://timvw.be/2004/05/21/listen-to-online-radio/</guid>
      <description>#!/bin/sh # # # Up#  # This script allows you to listen to Belgian online radio streams.  # if [ &amp;#34;$1&amp;#34; == &amp;#34;&amp;#34; ]; then echo &amp;#34; [1] Radio 1 [2] Radio 2 [3] Studio Brussel [4] Donna [5] 4FM [6] QMusic [7] Topradio [9] Klara Enter your choice: &amp;#34; read choice else choice=&amp;#34;$1&amp;#34; fi case &amp;#34;$choice&amp;#34; in 1) station=&amp;#34;mms://streampower.belgacom.be:1755/radio1high&amp;#34; ;; 2) station=&amp;#34;mms://streampower.belgacom.be:1755/ra2vlbhigh&amp;#34; ;; 3) station=&amp;#34;mms://streampower.belgacom.be:1755/stubruhigh&amp;#34; ;; 4) station=&amp;#34;mms://streampower.</description>
    </item>
    
    <item>
      <title>Kill a user and his processes</title>
      <link>https://timvw.be/2003/12/12/kill-a-user-and-his-processes/</link>
      <pubDate>Fri, 12 Dec 2003 00:00:00 +0000</pubDate>
      
      <guid>https://timvw.be/2003/12/12/kill-a-user-and-his-processes/</guid>
      <description>#!/bin/sh #  # # Up# # This script kills all processes that are owned by a given user.  # if [ -n &amp;#34;1&amp;#34; ] then ps -ef | grep $1 | grep -v grep | awk ‘{ print }’ | xargs kill -9 else echo &amp;#34;Usage: killuser.sh username&amp;#34; fi </description>
    </item>
    
  </channel>
</rss>
