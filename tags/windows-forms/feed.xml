<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows Forms on Tim Van Wassenhove</title>
    <link>https://timvw.be/tags/windows-forms/</link>
    <description>Recent content in Windows Forms on Tim Van Wassenhove</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Jan 2021 22:47:36 +0100</lastBuildDate>
    <atom:link href="https://timvw.be/tags/windows-forms/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Presenting FilterList</title>
      <link>https://timvw.be/2009/11/06/presenting-filterlist/</link>
      <pubDate>Fri, 06 Nov 2009 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2009/11/06/presenting-filterlist/</guid>
      <description>&lt;p&gt;Earlier today i decided to add &amp;lsquo;Filtering&amp;rsquo; to my SortableBindingList. This resulted in writing a &lt;a href=&#34;http://www.timvw.be/wp-content/code/csharp/FilterList.txt&#34;&gt;FilterList&lt;/a&gt; class. This class can be easily used as following&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; textBoxFilter_KeyUp&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; KeyEventArgs e&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;var&lt;/span&gt; filterChars &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;textBoxFilter&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Text&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;ToLower&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Filter&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;filterChars&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; Filter&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; filterChars&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;var&lt;/span&gt; persons &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;FilterList&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;person&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;)&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DataSource&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;persons&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Filter&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;p &lt;span style=&#34;color:#1f2328&#34;&gt;=&amp;gt;&lt;/span&gt; p&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Firstname&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;ToLower&lt;span style=&#34;color:#1f2328&#34;&gt;().&lt;/span&gt;Contains&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;filterChars&lt;span style=&#34;color:#1f2328&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I even created a screencast to demonstrate it:&lt;/p&gt;&#xA;&lt;p&gt;[mediaplayer src=&amp;lsquo;http://www.timvw.be/screencasts/filterlist.wmv&amp;rsquo; width=512 height=344]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Presenting ControlStateMachine</title>
      <link>https://timvw.be/2009/08/17/presenting-controlstatemachine/</link>
      <pubDate>Mon, 17 Aug 2009 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2009/08/17/presenting-controlstatemachine/</guid>
      <description>&lt;p&gt;Here is a situation we are all familiar with: A form that only displays a certain set of controls depending on the mode or state of the application. Let me start with an example: At design time there are three buttons&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/controlstatemachine.design.png&#34; alt=&#34;screenshot of flowlayoutpanel with three buttons: edit, save and cancel.&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The user can look at the data and decide to edit it:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/controlstatemachine.display.png&#34; alt=&#34;screenshot of flowlayoutpanel with only one visible button: edit.&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Presenting ControlChanges</title>
      <link>https://timvw.be/2009/08/15/presenting-controlchanges/</link>
      <pubDate>Sat, 15 Aug 2009 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2009/08/15/presenting-controlchanges/</guid>
      <description>&lt;p&gt;Because i noticed that i kept writing the same operations on control over and over again i decided to capture them in a couple of functions. I presume most of you have done this already. Here is the list of operations:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/controlchanges.cd.png&#34; alt=&#34;screenshot of a class diagram with the following operations: MakeVisible, MakeInvisible and TheOnlyVisibleControlsAre.&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;In case it is not clear what these methods should do i have defined the following specifications for them:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Experimenting with ControlStateMachine and Fluent interfaces</title>
      <link>https://timvw.be/2009/08/13/experimenting-with-controlstatemachine-and-fluent-interfaces/</link>
      <pubDate>Thu, 13 Aug 2009 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2009/08/13/experimenting-with-controlstatemachine-and-fluent-interfaces/</guid>
      <description>&lt;p&gt;A long time ago i read &lt;a href=&#34;http://codebetter.com/blogs/jeremy.miller/archive/2007/07/25/the-build-your-own-cab-series-table-of-contents.aspx&#34;&gt;Build your own CAB series&lt;/a&gt; and recently i noticed that there is a wiki: &lt;a href=&#34;http://www.jeremydmiller.com/ppatterns/Default.aspx?Page=MainPage&amp;amp;AspxAutoDetectCookieSupport=1&#34;&gt;Presentation Patterns Wiki!&lt;/a&gt; and it inspired me to experiment with state machines. Here are a couple of examples:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;controlStateMachine &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; ControlStateMachine&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;states&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;controlStateMachine&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;AfterEachStateChange&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Do&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;MakeRelevantButtonsVisible&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;controlStateMachine&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;WhenStateChangesTo&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;States&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;RetrievingSubscriptionPeriod&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;TheOnlyVisibleControlsAre&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;flowLayoutPanel1&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; datePicker1&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;controlStateMachine&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;WhenStateChangesTo&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;States&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;RetrievingCustomerInformation&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;MakeVisible&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;customerInput1&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Do&lt;span style=&#34;color:#1f2328&#34;&gt;(()&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;=&amp;gt;&lt;/span&gt; customerInput1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Dock &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; DockStyle&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Fill&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;controlStateMachine&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;WhenStateChangesTo&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;States&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Ready&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;MakeInvisible&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;customerInput1&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And here is another example:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wizardStateMachine &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; WizardStateMachine&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;states&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;(&lt;/span&gt;controlStateMachine&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wizardStateMachine&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;InState&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;States&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;RetrievingSubscriptionPeriod&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;OnCommand&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;WizardCommands&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Next&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;TransitionTo&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;States&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;RetrievingCustomerInformation&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wizardStateMachine&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;InState&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;States&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;RetrievingCustomerInformation&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;OnCommand&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;WizardCommands&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Back&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;TransitionTo&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;States&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;RetrievingSubscriptionPeriod&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;OnCommand&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;WizardCommands&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Finish&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;TransitionTo&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;States&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Ready&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wizardStateMachine&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;InState&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;States&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Ready&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;OnCommand&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;WizardCommands&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;New&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Do&lt;span style=&#34;color:#1f2328&#34;&gt;(()&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;=&amp;gt;&lt;/span&gt; MessageBox&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Show&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;Currently not supported&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Stay tuned for future posts where i describe the problem space that have lead to this API.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Presenting AssemblyTypePicker</title>
      <link>https://timvw.be/2008/09/01/presenting-assemblytypepicker/</link>
      <pubDate>Mon, 01 Sep 2008 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2008/09/01/presenting-assemblytypepicker/</guid>
      <description>&lt;p&gt;I really like the way the &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/exy1facf(VS.80).aspx&#34;&gt;Object Browser&lt;/a&gt; makes the types in an assembly visible. Because i have a couple of programs that require a given type as input, i have decided to add a TypeTree control to &lt;a href=&#34;http://www.codeplex.com/BeTimvwFramework&#34;&gt;BeTimvwFramework&lt;/a&gt; that mimicks the Object Browser. Here are a couple of screenshots of the control in a demo application that allows the user to generate interfaces and wrapper classes based on a selected type:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Display WorkItems in a WinForms application</title>
      <link>https://timvw.be/2008/02/29/display-workitems-in-a-winforms-application/</link>
      <pubDate>Fri, 29 Feb 2008 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2008/02/29/display-workitems-in-a-winforms-application/</guid>
      <description>&lt;p&gt;Using the Microsoft.TeamFoundation.WorkItemTracking.Controls assembly it is possibe to display WorkItems. Here is a little demo application that will display all the WorkItems that have been changed by one of the given users in the given range&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/workitemtracker.gif&#34; alt=&#34;screenshot of workitemtracker application&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Feel free to download the source: &lt;a href=&#34;http://www.timvw.be/wp-content/code/csharp/WorkItemTracker.zip&#34;&gt;WorkItemTracker.zip&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Edit (05/03/2008):&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Refactored the code a little and added some features like sortable columns, loading default tfsserver and users from App.Config, &amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>How the name of an embedded resource is generated in a C# project</title>
      <link>https://timvw.be/2008/02/20/how-the-name-of-an-embedded-resource-is-generated-in-a-c%23-project/</link>
      <pubDate>Wed, 20 Feb 2008 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2008/02/20/how-the-name-of-an-embedded-resource-is-generated-in-a-c%23-project/</guid>
      <description>&lt;p&gt;A while ago i was wondering how the name of an embedded resource is generated in a C# project. Earlier today i was looking in Microsoft.CSharp.targets and found the answer&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;The CreateManifestResourceNames target create the manifest resource names from the .RESX files.&lt;/p&gt;&#xA;&lt;p&gt;[IN]&#xA;@(ResxWithNoCulture) - The names the non-culture .RESX files.&#xA;@(ResxWithCulture) - The names the culture .RESX files.&#xA;@(NonResxWithNoCulture) - The names of the non-culture non-RESX files (like bitmaps, etc).&#xA;@(NonResxWithCulture) - The names of the culture non-RESX files (like bitmaps, etc).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using DateTimePicker and Custom Format</title>
      <link>https://timvw.be/2007/08/29/using-datetimepicker-and-custom-format/</link>
      <pubDate>Wed, 29 Aug 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/08/29/using-datetimepicker-and-custom-format/</guid>
      <description>&lt;p&gt;Today we ran into a nasty problem with &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.datetimepickerformat.aspx&#34;&gt;DateTimePickerFormat&lt;/a&gt;.Custom. We allow the user to input a month/date with a DateTimePicker as following (nothing fancy)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; Form1_Load&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; EventArgs e&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dateTimePicker1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Value &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; DateTime&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;2007&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dateTimePicker1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Format &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; DateTimePickerFormat&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Custom&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dateTimePicker1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;CustomFormat &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;MM/yyyy&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, change to 09/2007 and notice that you get an Exception, because the control tries to create an unrepresentable new DateTime(2007, 8+1, 31). Thus, if you&amp;rsquo;re going to use the DateTimePicker for MM/yyyy input make sure to set it&amp;rsquo;s value to a DateTimeTime with a day component that exists for all months/years (thus a value between 1 and 28).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bending the code generation of IExtenderProvider to your will</title>
      <link>https://timvw.be/2007/08/21/bending-the-code-generation-of-iextenderprovider-to-your-will/</link>
      <pubDate>Tue, 21 Aug 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/08/21/bending-the-code-generation-of-iextenderprovider-to-your-will/</guid>
      <description>&lt;p&gt;In &lt;a href=&#34;http://www.timvw.be/exploring-codedomserializer/&#34;&gt;Exploring CodeDomSerializer&lt;/a&gt; i already explained how we can modify the code that the Visual Studio designer generates for us. With a typical &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.componentmodel.iextenderprovider.aspx&#34;&gt;IExtenderProvider&lt;/a&gt; the designer generates an initializer, SetXXX methods and a variable declaration, which looks like&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;constantsExtenderProvider1 &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; WindowsApplication1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;ConstantsExtenderProvider&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;constantsExtenderProvider1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;SetConstants&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;button1&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;Operation1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;Operation5&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;constantsExtenderProvider1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;SetConstants&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; ConstantsExtenderProvider constantsExtenderProvider1&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, what if we&amp;rsquo;re not happy with those generated SetXXX methods on each Component? The problem is that this code is not generated by the serializer for the ConstantsExtenderProvider but by the serializers for the Components. An easy workaround for this problem is to set the &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.componentmodel.designerserializationvisibilityattribute.aspx&#34;&gt;DesignerSerializationVisibilityAttribute&lt;/a&gt; on the GetXXX method in our IExtenderProvider to &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.componentmodel.designerserializationvisibility.aspx&#34;&gt;Hidden&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Debugging custom UITypeEditors</title>
      <link>https://timvw.be/2007/08/10/debugging-custom-uitypeeditors/</link>
      <pubDate>Fri, 10 Aug 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/08/10/debugging-custom-uitypeeditors/</guid>
      <description>&lt;p&gt;If you read this you&amp;rsquo;re probably gonna think: What a moron! Anyway, i&amp;rsquo;m sharing this in the hope that i&amp;rsquo;ll be the last to undergo the following. In order to test my custom &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.drawing.design.uitypeeditor.aspx&#34;&gt;UITypeEditor&lt;/a&gt; i did the following&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.usercontrol.aspx&#34;&gt;UserControl&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Add a property to the control&lt;/li&gt;&#xA;&lt;li&gt;Add an &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.componentmodel.editorattribute.aspx&#34;&gt;Editor&lt;/a&gt; attribute to the property&lt;/li&gt;&#xA;&lt;li&gt;Build&lt;/li&gt;&#xA;&lt;li&gt;Drag a UserControl on the designer form&lt;/li&gt;&#xA;&lt;li&gt;Test via Visual Studio&amp;rsquo;s Property Window if the UITypeEditor works as expected&lt;/li&gt;&#xA;&lt;li&gt;Everytime i changed some code: &lt;strong&gt;Restart Visual Studio&lt;/strong&gt;, load the project and repeat 6.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;A tedious task to say the least. Yesterday i figured out that i could &lt;strong&gt;drag a &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.propertygrid.aspx&#34;&gt;PropertyGrid&lt;/a&gt; on the designer form, and set it&amp;rsquo;s SelectedObject property to a class with a property that uses the custom UITypeEditor; Instead of having to reload visual studio i can simply start a debug session, and click on the property in the PropertyGrid.&lt;/strong&gt; Now it&amp;rsquo;s a breeze to develop custom UITypeEditors.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploring formatting...</title>
      <link>https://timvw.be/2007/07/28/exploring-formatting.../</link>
      <pubDate>Sat, 28 Jul 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/07/28/exploring-formatting.../</guid>
      <description>&lt;p&gt;In the documentation you can read the following for &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.globalization.cultureinfo.aspx&#34;&gt;CultureInfo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;div&gt;&#xA;  The CultureInfo class holds culture-specific information, such as the associated language, sublanguage, country/region, calendar, and cultural conventions. This class also provides access to culture-specific instances of DateTimeFormatInfo, NumberFormatInfo, CompareInfo, and TextInfo. These objects contain the information required for culture-specific operations, such as casing, formatting dates and numbers, and comparing strings.&#xA;&lt;/div&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;First i&amp;rsquo;ll initialize an instance of a customized CultureInfo and install it in the current thread:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using interfaces with Drag and Drop</title>
      <link>https://timvw.be/2007/07/26/using-interfaces-with-drag-and-drop/</link>
      <pubDate>Thu, 26 Jul 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/07/26/using-interfaces-with-drag-and-drop/</guid>
      <description>&lt;p&gt;Earlier today i was refactoring some graphical components. I wanted to use an interface instead of concrete implementations for my drag and drop code&amp;hellip; Although i was using an instance of Foo, and thus IFoo, the following code never allowed me to drop&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;IFoo&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;Foo&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; IFoo &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; label1_MouseDown&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; MouseEventArgs e&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DoDragDrop&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; Foo&lt;span style=&#34;color:#1f2328&#34;&gt;(),&lt;/span&gt; DragDropEffects&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;All&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; Form1_DragEnter&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; DragEventArgs e&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#57606a&#34;&gt;// for an instance of Foo it returns false,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#57606a&#34;&gt;// if you use typeof(Foo) it returns true though...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Data&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;GetDataPresent&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;typeof&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;IFoo&lt;span style=&#34;color:#1f2328&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Effect &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; DragDropEffects&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;All&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Simply wrapping the concrete instance in a &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.dataobject(VS.80).aspx&#34;&gt;DataObject&lt;/a&gt; results in the desired behaviour&lt;/p&gt;</description>
    </item>
    <item>
      <title>Improvements for the SortableBindingList (and TypedList)</title>
      <link>https://timvw.be/2007/05/10/improvements-for-the-sortablebindinglist-and-typedlist/</link>
      <pubDate>Thu, 10 May 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/05/10/improvements-for-the-sortablebindinglist-and-typedlist/</guid>
      <description>&lt;p&gt;I found out that the sorting didn&amp;rsquo;t work for &amp;lsquo;Expression&amp;rsquo; properties. My first thought was to add another switch to the logic of the already existing code&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; value1 &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; t1&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; value2 &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; t2&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;prop&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Name&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;StartsWith&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;||&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#57606a&#34;&gt;// do something to find the &amp;#39;ExpressionProperty&amp;#39; values&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;foreach&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; property &lt;span style=&#34;color:#cf222e&#34;&gt;in&lt;/span&gt; prop&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Name&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Split&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#57606a&#34;&gt;// navigate through the relations&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;PropertyInfo propertyInfo &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; value1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;GetType&lt;span style=&#34;color:#1f2328&#34;&gt;().&lt;/span&gt;GetProperty&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;property&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;value1 &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; propertyInfo&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;GetValue&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;value1&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;value2 &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; propertyInfo&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;GetValue&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;value2&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Since i already have a PropertyDescriptor it seems a lot smarter to use it&amp;rsquo;s GetValue instead&lt;/p&gt;</description>
    </item>
    <item>
      <title>Presenting the ExpressionDescriptor</title>
      <link>https://timvw.be/2007/05/08/presenting-the-expressiondescriptor/</link>
      <pubDate>Tue, 08 May 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/05/08/presenting-the-expressiondescriptor/</guid>
      <description>&lt;p&gt;A couple of days ago i presented you the &lt;a href=&#34;http://www.timvw.be/presenting-the-typedlistt/&#34;&gt;TypedList&lt;/a&gt; which supports navigation through subproperties. Another common feature request is the possibility to add a column that has a value based on other values in the row (like a DataColumn with it&amp;rsquo;s Expression property set). With the plumbing code i&amp;rsquo;ve written it&amp;rsquo;s as simple as implementing the following interface&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;IExpressionProvider&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;componentType&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; PropertyType&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; Name &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;PropertyType GetValue&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;ComponentType component&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;An example implementation could be an expression that represents the duration of an Appointment&lt;/p&gt;</description>
    </item>
    <item>
      <title>Presenting the TypedList&lt;T&gt;</title>
      <link>https://timvw.be/2007/05/05/presenting-the-typedlistt/</link>
      <pubDate>Sat, 05 May 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/05/05/presenting-the-typedlistt/</guid>
      <description>&lt;p&gt;A while ago i presented the &lt;a href=&#34;http://www.timvw.be/presenting-the-sortablebindinglistt/&#34;&gt;SortableBindingList&lt;/a&gt;. One of the nice features you get with DataSets is that you can use relations to navigate through the data. Business Objects don&amp;rsquo;t give you this functionality by default. Today i implemented a BindingList that supports navigation through relations. First i&amp;rsquo;ll present you the Business Objects&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/typedlist-1.gif&#34; alt=&#34;screenshot of business objects&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;We would like to create an overview of the appointments using a datagridview&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/typedlist-2.gif&#34; alt=&#34;screenshot of wanted ui&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploring DataGridViewComboBoxColumn databinding (part2)</title>
      <link>https://timvw.be/2007/05/03/exploring-datagridviewcomboboxcolumn-databinding-part2/</link>
      <pubDate>Thu, 03 May 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/05/03/exploring-datagridviewcomboboxcolumn-databinding-part2/</guid>
      <description>&lt;p&gt;A while ago i wrote about &lt;a href=&#34;http://www.timvw.be/exploring-datagridviewcomboboxcolumn-databinding/&#34;&gt;Exploring DataGridViewComboBoxColumn databinding&lt;/a&gt; using Business Objects. Some people asked me to give an example using DataSets&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ll start with creating a DataSet, add two DataTables, and create a relation on PersonType.Id (int32). In the designer this looks like&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/databind-dataset1.gif&#34; alt=&#34;screenshot of dataset designer displaying person and persontype&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Next i create a DataSetDac that will return an instance of a Filled PersonDataSet (In real life you would probably use a TableAdapter and get the data from a database) The code is as simple as&lt;/p&gt;</description>
    </item>
    <item>
      <title>Presenting the MultiPanel</title>
      <link>https://timvw.be/2007/04/29/presenting-the-multipanel/</link>
      <pubDate>Sun, 29 Apr 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/04/29/presenting-the-multipanel/</guid>
      <description>&lt;p&gt;A while ago i was thinking that i would be nice to have a control that exposes multiple designer panels, but only shows one at a time&amp;hellip; Somewhat like a TabControl, but without the header.. Anyway, i found out (&lt;a href=&#34;http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=1518961&amp;amp;SiteID=1&#34;&gt;here&lt;/a&gt;) that a TabControl can be tweaked into that behaviour&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;MultiPanel&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; TabControl&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; WndProc&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;ref&lt;/span&gt; Message m&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;m&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Msg &lt;span style=&#34;color:#1f2328&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;0x1328&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;!&lt;/span&gt;DesignMode&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;m&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Result &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;IntPtr&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;WndProc&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;ref&lt;/span&gt; m&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the designer it appears as following&lt;/p&gt;</description>
    </item>
    <item>
      <title>Performing long running tasks in a Windows Application</title>
      <link>https://timvw.be/2007/04/27/performing-long-running-tasks-in-a-windows-application/</link>
      <pubDate>Fri, 27 Apr 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/04/27/performing-long-running-tasks-in-a-windows-application/</guid>
      <description>&lt;p&gt;A while ago i blogged about &lt;a href=&#34;http://www.timvw.be/about-thread-safe-gui/&#34;&gt;Thread Safe UI&lt;/a&gt;. Today someone asked the following&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;div&gt;&#xA;  On a form i have a datagridview and two button. One is for insert in a database the values in datagridview, and the other to update data in db.&lt;br /&gt; Now, i would like to have a kind of &#39;progress form&#39; during the insert or the update. At the end, only when the operation is finished, the user can reuse the main form.&#xA;&lt;/div&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;The first thing i do is define a delegate (void Performer()) that will do the work of a long running operation. The reason i do this is because the compiler generates a class Performer that inherits from System.MulticastDelegate and exposes Begin- and EndInvoke methods.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DataGridView to Excel</title>
      <link>https://timvw.be/2007/04/05/datagridview-to-excel/</link>
      <pubDate>Thu, 05 Apr 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/04/05/datagridview-to-excel/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://www.carlosag.net/Tools/ExcelXmlWriter/Default.aspx&#34;&gt;CarlosAg Excel Xml Writer Library&lt;/a&gt; does not require &lt;a href=&#34;http://office.microsoft.com/en-us/excel/default.aspx&#34;&gt;Excel&lt;/a&gt; in order to generate Excel Workbooks. I already presented a method to print a DataGridView (&lt;a href=&#34;http://www.timvw.be/print-a-control/&#34;&gt;here&lt;/a&gt;) and now i present you a method that allows you to export a DataGridView to an Excel Workbook: &lt;a href=&#34;http://www.timvw.be/wp-content/code/csharp/DataGridViewToExcel.zip&#34;&gt;DataGridViewToExcel.zip&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/datagridview-to-excel-1.gif&#34; alt=&#34;screenshot of the source datagridview&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/datagridview-to-excel-2.gif&#34; alt=&#34;screenshot of the generated excel workbook&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Little INotifyPropertyChanged helper</title>
      <link>https://timvw.be/2007/03/19/little-inotifypropertychanged-helper/</link>
      <pubDate>Mon, 19 Mar 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/03/19/little-inotifypropertychanged-helper/</guid>
      <description>&lt;p&gt;Most implementations of INotifyPropertyChanged look as following (notice that you have to make sure that the hardcoded PropertyName is spelled correctly)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;MyClass&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; INotifyPropertyChanged&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;event&lt;/span&gt; PropertyChangedEventHandler PropertyChanged&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; x&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; X&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;x&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;set&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;x &lt;span style=&#34;color:#1f2328&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;x &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;OnPropertyChanged&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;X&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&#x9;[MethodImpl(MethodImplOptions.NoInlining)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; Fire&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;Delegate del&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;params&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;[]&lt;/span&gt; args&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;del &lt;span style=&#34;color:#1f2328&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;foreach&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;Delegate sink &lt;span style=&#34;color:#cf222e&#34;&gt;in&lt;/span&gt; del&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;GetInvocationList&lt;span style=&#34;color:#1f2328&#34;&gt;())&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; sink&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DynamicInvoke&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;args&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;virtual&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; OnPropertyChanged&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; propertyName &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Fire&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;PropertyChanged&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; PropertyChangedEventArgs&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; propertyName &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Everytime you refactor a property you also have to make sure to refactor the string with it&amp;rsquo;s name in the setter method. Here&amp;rsquo;s a helper method that makes life a little easier&lt;/p&gt;</description>
    </item>
    <item>
      <title>Presenting the SortableBindingList&lt;T&gt;</title>
      <link>https://timvw.be/2007/02/22/presenting-the-sortablebindinglistt/</link>
      <pubDate>Thu, 22 Feb 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/02/22/presenting-the-sortablebindinglistt/</guid>
      <description>&lt;p&gt;If you are databinding your custom objects (in a Bindinglist of &lt;T&gt;) to a DataGridView you will notice that the users can&amp;rsquo;t sort the rows by clicking on the columnheaders&amp;hellip; Unlike an unbound DataGridView, the SortCompare event is not raised. Here is a class that uses IComparer to implement a BindingList that supports Sorting:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Please read the &lt;a href=&#34;http://www.timvw.be/presenting-the-sortablebindinglistt-take-two/&#34;&gt;follow up article&lt;/a&gt; to find the updated source code.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Using this SortableBindingList is as easy as&lt;/p&gt;</description>
    </item>
    <item>
      <title>Don&#39;t wait until the DateTimePicker has lost focus to write back the values</title>
      <link>https://timvw.be/2007/02/07/dont-wait-until-the-datetimepicker-has-lost-focus-to-write-back-the-values/</link>
      <pubDate>Wed, 07 Feb 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/02/07/dont-wait-until-the-datetimepicker-has-lost-focus-to-write-back-the-values/</guid>
      <description>&lt;p&gt;Drag a TextBox and a DateTimePicker control on a Form and databind them to a DateTime property, eg&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;partial&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;Form1&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; Form&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; Form1&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;InitializeComponent&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;SimpleObject simpleObject &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; SimpleObject&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;simpleObject&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Birthday &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; DateTime&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Now&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dateTimePicker1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DataBindings&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Add&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;Value&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; simpleObject&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;Birthday&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;textBox1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DataBindings&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Add&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;Text&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; simpleObject&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;Birthday&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; DataSourceUpdateMode&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;OnPropertyChanged&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;SimpleObject&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; INotifyPropertyChanged&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; DateTime birthday&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;event&lt;/span&gt; PropertyChangedEventHandler PropertyChanged&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; DateTime Birthday&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;birthday&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;set&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;birthday &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;OnPropertyChanged&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;Birthday&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; OnPropertyChanged&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; propertyName&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;PropertyChanged &lt;span style=&#34;color:#1f2328&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;PropertyChanged&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; PropertyChangedEventArgs&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;propertyName&lt;span style=&#34;color:#1f2328&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The annoying bit is that every time the user picks a datetime, he has to move the focus before the changes in the DateTimePicker control are written back to the datasource&amp;hellip; You can circumvent this by handling the CloseUp event of the DataTimePicker as following&lt;/p&gt;</description>
    </item>
    <item>
      <title>Control the order of Properties in your Class</title>
      <link>https://timvw.be/2007/02/04/control-the-order-of-properties-in-your-class/</link>
      <pubDate>Sun, 04 Feb 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/02/04/control-the-order-of-properties-in-your-class/</guid>
      <description>&lt;p&gt;Sometimes you want to manipulate the order in which properties are used for databinding. Eg: If you drag and drop an object datasource on a DataGridView you have no control in which order it binds the properties. Offcourse, you can order the columns by moving them around&amp;hellip; Today someone asked the following&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;div&gt;&#xA;  I would like to have it come from the class in the order I want it. Any suggestions on how to set the display order without referencing the actual member names?&#xA;&lt;/div&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;I started with the implementation of a PropertyOrderAttribute&lt;/p&gt;</description>
    </item>
    <item>
      <title>Presenting the DataGridViewLargeTextBoxCell</title>
      <link>https://timvw.be/2007/01/27/presenting-the-datagridviewlargetextboxcell/</link>
      <pubDate>Sat, 27 Jan 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/01/27/presenting-the-datagridviewlargetextboxcell/</guid>
      <description>&lt;p&gt;Today i decided to experiment a bit with custom &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.datagridviewcell.aspx&#34;&gt;DataGridViewCell&lt;/a&gt; implementations. If you insert large text into a DataGridView it will (at best) wrap the text. I wanted my DataGridView to behave like &lt;a href=&#34;http://office.microsoft.com/excel/&#34;&gt;Excel&lt;/a&gt; so that the whole text is displayed. Here are a couple of screenshots of the result&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/datagridviewlargetextboxcell-1.gif&#34; alt=&#34;the large text flows over it&amp;rsquo;s surrounding columns&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/datagridviewlargetextboxcell-2.gif&#34; alt=&#34;the editingcontrol is resized to fit the complete text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Feel free to download &lt;a href=&#34;http://www.timvw.be/wp-content/code/csharp/CustomDataGridViewCells.zip&#34;&gt;CustomDataGridViewCells.zip&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About Thread-Safe GUI...</title>
      <link>https://timvw.be/2007/01/21/about-thread-safe-gui.../</link>
      <pubDate>Sun, 21 Jan 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/01/21/about-thread-safe-gui.../</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re writing windows applications you&amp;rsquo;ll most certainly recognize the following piece of code&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;delegate&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; UpdateIntResultDelegate&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; result&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; UpdateIntResult&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; result&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;labelIntResult&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;InvokeRequired&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;labelIntResult&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Invoke&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; UpdateIntResultDelegate&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;UpdateIntResult&lt;span style=&#34;color:#1f2328&#34;&gt;),&lt;/span&gt; result&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;myDataSource&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;IntResult &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; result&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;delegate&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; UpdateStringResultDelegate&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; result&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; UpdateStringResult&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; result&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;labelStringResult&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;InvokeRequired&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;labelStringResult&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Invoke&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; UpdateStringResultDelegate&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;UpdateStringResult&lt;span style=&#34;color:#1f2328&#34;&gt;),&lt;/span&gt; result&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;myDataSource&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;StringResult &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; result&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Today i was fed up with defining all these Delegates.. So i decided to define a generic delegate instead&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;delegate&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; Delegate&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;t&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;(&lt;/span&gt;T t&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And now i can reuse this Delegate for my two update methods&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploring DataGridViewComboBoxColumn databinding</title>
      <link>https://timvw.be/2007/01/17/exploring-datagridviewcomboboxcolumn-databinding/</link>
      <pubDate>Wed, 17 Jan 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/01/17/exploring-datagridviewcomboboxcolumn-databinding/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s start with a simple example: Each Person has a Name (string) and PersonTypeCode (an Enumerated value) property. We drag a DataGridView on the designer form and add two columns (DataGridViewComboBoxColumn for the PersonTypeCode property). And then we hook up the Bindingsource as following&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;Form1&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; Form&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; Form1&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;InitializeComponent&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;AutoGenerateColumns &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;ColumnName&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DataPropertyName &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;Name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;ColumnPersonTypeCode&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DataPropertyName &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;PersonTypeCode&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;BindingSource bindingSource &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; BindingSource&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;bindingSource&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DataSource &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; FindPersons&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DataSource &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; bindingSource&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; BindingList&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;person&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt; FindPersons&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;BindingList&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;person&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt; bindingList &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; BindingList&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;person&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;bindingList&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Add&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; Person&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;Timvw&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; PersonTypeCode&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Geek&lt;span style=&#34;color:#1f2328&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;bindingList&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Add&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; Person&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;John Doe&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; PersonTypeCode&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Anonymous&lt;span style=&#34;color:#1f2328&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;bindingList&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Add&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; Person&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;An Onymous&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; PersonTypeCode&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Anonymous&lt;span style=&#34;color:#1f2328&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;bindingList&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Add&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; Person&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;Jenna Jameson&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; PersonTypeCode&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Babe&lt;span style=&#34;color:#1f2328&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;return&lt;/span&gt; bindingList&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;enum&lt;/span&gt; PersonTypeCode&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;Geek &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;Anonymous &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;Babe &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;Person&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; PersonTypeCode personTypeCode&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; name&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; Person&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; name&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; PersonTypeCode personTypeCode&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; name&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;personTypeCode &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; personTypeCode&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; Name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;name&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; PersonTypeCode PersonTypeCode&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;personTypeCode&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;personTypeCode &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If we run this code we run in the following error:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hide and unhide columns (or rows) in the DataGridView</title>
      <link>https://timvw.be/2007/01/13/hide-and-unhide-columns-or-rows-in-the-datagridview/</link>
      <pubDate>Sat, 13 Jan 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/01/13/hide-and-unhide-columns-or-rows-in-the-datagridview/</guid>
      <description>&lt;p&gt;Once in a while i see the following question&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;div&gt;&#xA;  I have to create a customized datagridview to enable the expandable columns. Expandable column in the sense drilling down the columns.... One column can hide multiple columns. The user can see the child columns by clicking the + button before the column name&#xA;&lt;/div&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Using the Visibile property of the DataGridViewColumn makes this a no-brainer. Let&amp;rsquo;s take the &lt;a href=&#34;http://www.timvw.be/developing-a-datasource-for-your-datagridview/&#34;&gt;Databound DataGridView&lt;/a&gt; and implement functionality to hide/unhide the quarterly results. All you have to do is add a DataGridViewButtonColumn and handle the DataGridView CellClick event as following&lt;/p&gt;</description>
    </item>
    <item>
      <title>Databinding a Nullable&lt;T&gt; property</title>
      <link>https://timvw.be/2007/01/10/databinding-a-nullablet-property/</link>
      <pubDate>Wed, 10 Jan 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/01/10/databinding-a-nullablet-property/</guid>
      <description>&lt;p&gt;I find it frustrating that data binding does not really support Nullable&lt;T&gt;. Anyway, it&amp;rsquo;s relatively easy to workaround this shortcoming&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;partial&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;Form1&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; Form&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; MyDataSource myDataSource&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; Form1&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;InitializeComponent&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;myDataSource &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; MyDataSource&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;textBox1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DataBindings&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Add&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;Text&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;myDataSource&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;Double&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;textBox1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DataBindings&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;Text&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;].&lt;/span&gt;Parse &lt;span style=&#34;color:#1f2328&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Text_Parse&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; Text_Parse&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; ConvertEventArgs e &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Value &lt;span style=&#34;color:#1f2328&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;||&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Value&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;ToString&lt;span style=&#34;color:#1f2328&#34;&gt;().&lt;/span&gt;Length &lt;span style=&#34;color:#1f2328&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Value &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; buttonTellMe_Click&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; EventArgs e&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;myDataSource&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Double&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;HasValue&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;MessageBox&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Show&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;The double is: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;myDataSource&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Double&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;MessageBox&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Show&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;The double is null&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;MyDataSource&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;double?&lt;/span&gt; _double&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;double?&lt;/span&gt; Double&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;_double&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;_double &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/databind-nullabletext1.gif&#34; alt=&#34;screenshot of double value in textbox&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>The NullableDateAndTimePicker Control</title>
      <link>https://timvw.be/2007/01/07/the-nullabledateandtimepicker-control/</link>
      <pubDate>Sun, 07 Jan 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/01/07/the-nullabledateandtimepicker-control/</guid>
      <description>&lt;p&gt;A while ago i presented the concept of a &lt;a href=&#34;http://www.timvw.be/a-dateandtimepicker-control/&#34;&gt;DateAndTimePicker&lt;/a&gt;. Today someone asked if it&amp;rsquo;s possible to give the user an option to &amp;rsquo;not choose a DateTime&amp;rsquo;. I created a UserControl that has both a DateAndTimePicker and a CheckBox with a Value property of Nullable&lt;DateTime&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/dateandtimepicker-nullable-1.gif&#34; alt=&#34;screenshot of the nullable dateandtimepicker&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/dateandtimepicker-nullable-2.gif&#34; alt=&#34;screenshot of the nullable dateandtimepicker&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Feel free to download the updated &lt;a href=&#34;http://www.timvw.be/wp-content/code/csharp/DateAndTimePicker.zip&#34;&gt;DateAndTimePicker.zip&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Enable and disable TabPages on a TabControl</title>
      <link>https://timvw.be/2007/01/06/enable-and-disable-tabpages-on-a-tabcontrol/</link>
      <pubDate>Sat, 06 Jan 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/01/06/enable-and-disable-tabpages-on-a-tabcontrol/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/disabled-tabcontrol-1.gif&#34; alt=&#34;screenshot of tabcontrol with disabled tabpages&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/disabled-tabcontrol-2.gif&#34; alt=&#34;screenshot of tabcontrol with disabled tabpages&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Apparently &lt;a href=&#34;http://www.microsoft.com&#34;&gt;Microsoft&lt;/a&gt; choose not to implement support for disabled &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.tabpage.aspx&#34;&gt;TabPage&lt;/a&gt;s. The reason seems to be that it&amp;rsquo;s against their &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/aa511493.aspx&#34;&gt;Guidelines for Tabs&lt;/a&gt;. Let&amp;rsquo;s ignore the guideline and implement the support anyway. First we set the &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.tabcontrol.drawmode.aspx&#34;&gt;DrawMode&lt;/a&gt; property of the &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.tabcontrol.aspx&#34;&gt;TabControl&lt;/a&gt; to &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.tabdrawmode.aspx&#34;&gt;OwnerDrawFixed&lt;/a&gt;. Next we add an eventhandler for the &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.tabcontrol.drawitem.aspx&#34;&gt;DrawItem&lt;/a&gt; Event&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; tabControl1_DrawItem&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; DrawItemEventArgs e&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;TabControl tabControl &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; sender &lt;span style=&#34;color:#cf222e&#34;&gt;as&lt;/span&gt; TabControl&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;TabPage tabPage &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; tabControl&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;TabPages&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Index&lt;span style=&#34;color:#1f2328&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;Rectangle tabRectangle &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; tabControl&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;GetTabRect&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Index&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;tabControl&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Alignment &lt;span style=&#34;color:#1f2328&#34;&gt;==&lt;/span&gt; TabAlignment&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Left &lt;span style=&#34;color:#1f2328&#34;&gt;||&lt;/span&gt; tabControl&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Alignment &lt;span style=&#34;color:#1f2328&#34;&gt;==&lt;/span&gt; TabAlignment&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Right&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;float&lt;/span&gt; rotateAngle &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;tabControl&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Alignment &lt;span style=&#34;color:#1f2328&#34;&gt;==&lt;/span&gt; TabAlignment&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Left&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;rotateAngle &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;270&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;PointF cp &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; PointF&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;tabRectangle&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Left &lt;span style=&#34;color:#1f2328&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;tabRectangle&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width &lt;span style=&#34;color:#1f2328&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;),&lt;/span&gt; tabRectangle&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Top &lt;span style=&#34;color:#1f2328&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;tabRectangle&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height &lt;span style=&#34;color:#1f2328&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Graphics&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;TranslateTransform&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;cp&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;X&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; cp&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Y&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Graphics&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;RotateTransform&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;rotateAngle&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;tabRectangle &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; Rectangle&lt;span style=&#34;color:#1f2328&#34;&gt;(-(&lt;/span&gt;tabRectangle&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height &lt;span style=&#34;color:#1f2328&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;-(&lt;/span&gt;tabRectangle&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width &lt;span style=&#34;color:#1f2328&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;),&lt;/span&gt; tabRectangle&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; tabRectangle&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;SolidBrush foreBrush &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; SolidBrush&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;tabPage&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;ForeColor&lt;span style=&#34;color:#1f2328&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;SolidBrush backBrush &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; SolidBrush&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;tabPage&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;BackColor&lt;span style=&#34;color:#1f2328&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(!&lt;/span&gt;tabPage&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Enabled&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;foreBrush&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Color &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; SystemColors&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;GrayText&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Graphics&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;FillRectangle&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;backBrush&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; tabRectangle&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;StringFormat stringFormat &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; StringFormat&lt;span style=&#34;color:#1f2328&#34;&gt;())&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;stringFormat&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Alignment &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; StringAlignment&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Center&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;stringFormat&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;LineAlignment &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; StringAlignment&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Center&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Graphics&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DrawString&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;tabPage&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Text&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Font&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; foreBrush&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; tabRectangle&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; stringFormat&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Graphics&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;ResetTransform&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And we handle the &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.tabcontrol.selecting.aspx&#34;&gt;Selecting&lt;/a&gt; Event as following&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developing a DataSource for your DataGridView</title>
      <link>https://timvw.be/2007/01/04/developing-a-datasource-for-your-datagridview/</link>
      <pubDate>Thu, 04 Jan 2007 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2007/01/04/developing-a-datasource-for-your-datagridview/</guid>
      <description>&lt;p&gt;Imagine that you want to develop a DataSource that is capable to represent the data displayed in the following excel sheet&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/dgv-ds-1.gif&#34; alt=&#34;screenshot of excel sheet&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;For each region the values are given. The YEAR value is defined as the sum of Q1, Q2, Q3 and Q4, eg: for EMEA this is SUM(B2:E2). The GLOBAL values are calculated as the sum of the regions for the quarter, eg: for Q1 this is SUM(B2:B5). We&amp;rsquo;ll start with the easiest task: Add columns to the DGV and define the headers&lt;/p&gt;</description>
    </item>
    <item>
      <title>Print a Control</title>
      <link>https://timvw.be/2006/12/31/print-a-control/</link>
      <pubDate>Sun, 31 Dec 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/12/31/print-a-control/</guid>
      <description>&lt;p&gt;A while ago i discovered the &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.control.drawtobitmap.aspx&#34;&gt;DrawToBitmap&lt;/a&gt; method on the &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.control.aspx&#34;&gt;Control&lt;/a&gt; class. The availability of this method makes it relatively easy to implement a &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.drawing.printing.printpageeventhandler.aspx&#34;&gt;PrintPageEventHandler&lt;/a&gt; for the &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.drawing.printing.printdocument.aspx&#34;&gt;PrintDocument&lt;/a&gt; class. Here is an example implementation that prints a DataGridView&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; buttonPrint_Click&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; EventArgs e&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;printDocument1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Print&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; printDocument1_BeginPrint&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; PrintEventArgs e&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;currentPage &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; printDocument1_PrintPage&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; System&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Drawing&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Printing&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;PrintPageEventArgs e&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;Size oldSize &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Size&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; Math&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Max&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;PreferredSize&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; Math&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Max&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;PreferredSize&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; requiredPagesForWidth &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width &lt;span style=&#34;color:#1f2328&#34;&gt;/&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;MarginBounds&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; requiredPagesForHeight &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height &lt;span style=&#34;color:#1f2328&#34;&gt;/&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;MarginBounds&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; requiredPages &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; requiredPagesForWidth &lt;span style=&#34;color:#1f2328&#34;&gt;*&lt;/span&gt; requiredPagesForHeight&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;HasMorePages &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;currentPage &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt; requiredPages &lt;span style=&#34;color:#1f2328&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; posX &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;currentPage &lt;span style=&#34;color:#1f2328&#34;&gt;%&lt;/span&gt; requiredPagesForWidth&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f6f8fa;background-color:#82071e&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;*&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;MarginBounds&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; posY &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;currentPage &lt;span style=&#34;color:#1f2328&#34;&gt;/&lt;/span&gt; requiredPagesForWidth&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f6f8fa;background-color:#82071e&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;*&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;MarginBounds&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;Graphics graphics &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Graphics&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;Bitmap bitmap &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; Bitmap&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DrawToBitmap&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;bitmap&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Bounds&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;graphics&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DrawImage&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;bitmap&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; Rectangle&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;MarginBounds&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;X&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;MarginBounds&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Y&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;MarginBounds&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;MarginBounds&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height&lt;span style=&#34;color:#1f2328&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; Rectangle&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;posX&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; posY&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;MarginBounds&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;MarginBounds&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height&lt;span style=&#34;color:#1f2328&#34;&gt;),&lt;/span&gt; GraphicsUnit&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Pixel&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Size &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; oldSize&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;currentPage&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now that you understand the main idea, let&amp;rsquo;s wrap it in a class and make it reusable: &lt;a href=&#34;http://www.timvw.be/wp-content/code/csharp/ResizedControlPrintPageEventHandler.txt&#34;&gt;ResizedControlPrintPageEventHandler&lt;/a&gt;. Using this class is as simple as&lt;/p&gt;</description>
    </item>
    <item>
      <title>Drag and Drop Microsoft Office Outlook Contacts on your WinForm</title>
      <link>https://timvw.be/2006/12/19/drag-and-drop-microsoft-office-outlook-contacts-on-your-winform/</link>
      <pubDate>Tue, 19 Dec 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/12/19/drag-and-drop-microsoft-office-outlook-contacts-on-your-winform/</guid>
      <description>&lt;p&gt;Earlier today i saw someone that wanted to know how to drag and drop Microsoft Office Outlook Contacts on his winform (and get the data of the contact). Here are the few lines of code that do what he asked for&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#57606a&#34;&gt;// in the constructor of the form (or in the InitializeComponent method if you set it via the Designer)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;AllowDrop &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#57606a&#34;&gt;// handle the DragOver event&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; Form1_DragOver&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; DragEventArgs e&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Effect &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; DragDropEffects&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;All&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#57606a&#34;&gt;// handle the DragDrop event&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; Form1_DragDrop&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; DragEventArgs e&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; text &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Data&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;GetData&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;Text&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;label1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Text &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; text&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#57606a&#34;&gt;// for more finegrained access to the data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#57606a&#34;&gt;//string[] lines = text.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/outlookcontactdragdrop.jpg&#34; alt=&#34;screenshot of outlook contact that was dragged and dropped on the form&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>A DateAndTimePicker control</title>
      <link>https://timvw.be/2006/12/18/a-dateandtimepicker-control/</link>
      <pubDate>Mon, 18 Dec 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/12/18/a-dateandtimepicker-control/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.datetimepicker.aspx&#34;&gt;DateTimePicker&lt;/a&gt; control allows the user to input a Date or a Time. The problem is that you can&amp;rsquo;t let the user pick both a date and a time with one instance of the control (unless you set the CustomFormat property and give up the &amp;rsquo;nice&amp;rsquo; ui) so i decided to build my own DateAndTimePicker control&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/dateandtimepicker.jpg&#34; alt=&#34;screenshot of the dateandtimepicker control&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Feel free to download and extended the &lt;a href=&#34;http://www.timvw.be/wp-content/code/csharp/DateAndTimePicker.zip&#34;&gt;DateAndTimePicker.zip&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Simple OutlookBar Control</title>
      <link>https://timvw.be/2006/12/17/simple-outlookbar-control/</link>
      <pubDate>Sun, 17 Dec 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/12/17/simple-outlookbar-control/</guid>
      <description>&lt;p&gt;Earlier this evening i wanted to experiment with the &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.toolstrip.aspx&#34;&gt;ToolStrip&lt;/a&gt; class so i decided to design a simple OutlookBar Control and a demo application that uses this control. Feel free to download &lt;a href=&#34;http://www.timvw.be/wp-content/code/csharp/OutlookBar.zip&#34;&gt;OutlookBar.zip&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/outlookbardemo.jpg&#34; alt=&#34;screenshot of OutlookBar demo&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>What goes up must come down...</title>
      <link>https://timvw.be/2006/12/13/what-goes-up-must-come-down.../</link>
      <pubDate>Wed, 13 Dec 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/12/13/what-goes-up-must-come-down.../</guid>
      <description>&lt;p&gt;What goes up must come down&amp;hellip; So you might think that after each CellMouseDown event you recieve a CellMouseUp event&amp;hellip; Well, here is some code that proves that isn&amp;rsquo;t always true&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;partial&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;Form1&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; Form&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; lastEvent&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; Form1&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;InitializeComponent&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;ColumnCount &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;RowCount &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; LastEvent&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;lastEvent&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;lastEvent &lt;span style=&#34;color:#1f2328&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;MessageBox&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Show&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;i&amp;#39;ve detected two &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34; after each other&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;lastEvent &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; dataGridView1_CellMouseDown&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; DataGridViewCellMouseEventArgs e&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;LastEvent &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;MouseDown&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; dataGridView1_CellMouseUp&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; DataGridViewCellMouseEventArgs e&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;LastEvent &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;MouseUp&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And with a bit of a twisted optical mouse it&amp;rsquo;s pretty easy to see the following MessageBox&lt;/p&gt;</description>
    </item>
    <item>
      <title>Master-Slave for databound ComboBoxes</title>
      <link>https://timvw.be/2006/11/25/master-slave-for-databound-comboboxes/</link>
      <pubDate>Sat, 25 Nov 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/11/25/master-slave-for-databound-comboboxes/</guid>
      <description>&lt;p&gt;In most examples on the Internet you&amp;rsquo;ll find that the Master has a property that returns the allowed Slaves. Here&amp;rsquo;s an example that does not require such a property. Let&amp;rsquo;s start with a simple class that represents a Person.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;Person&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; name&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; Person&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; name&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; name&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; Name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;name&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And now we define a class to hold the choosen Master and Slave persons.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Screenshot of DataGridViews</title>
      <link>https://timvw.be/2006/10/08/screenshot-of-datagridviews/</link>
      <pubDate>Sun, 08 Oct 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/10/08/screenshot-of-datagridviews/</guid>
      <description>&lt;p&gt;The problem with a regular screenshot is that you only get to see a part of the DataGridViews. Here&amp;rsquo;s an example of a typical form&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/datagridviews-with-scrollbars.jpg&#34; alt=&#34;image of datagridview with scrollbars&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Here is a snippet that makes a screenshot of the complete DataGridViews&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;List&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;bitmap&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt; bitmaps &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; List&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;bitmap&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Size size &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; Size&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; i &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;++&lt;/span&gt;i&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#57606a&#34;&gt;// lookup the datagridview &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;DataGridView dataGridView &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;DataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Controls&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;dataGridView&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;+&lt;/span&gt; i&lt;span style=&#34;color:#1f2328&#34;&gt;];&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#57606a&#34;&gt;// maximize the datagridview size (choosing between current and preferred) &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;Size oldSize &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; dataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Size&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;Size newSize &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; dataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;PreferredSize&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;dataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Size&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt; newSize&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;newSize&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; dataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Size&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;dataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Size&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt; newSize&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;newSize&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; dataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Size&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;dataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Size &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; newSize&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#57606a&#34;&gt;// draw the datagridview into a bitmap&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;Bitmap bitmap &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; Bitmap&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;dataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; dataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;dataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DrawToBitmap&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;bitmap&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; Rectangle&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; dataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; dataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height&lt;span style=&#34;color:#1f2328&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#57606a&#34;&gt;// restore the datagridview to it&amp;#39;s original size&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;dataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Size &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; oldSize&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;bitmaps&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Add&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;bitmap&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#57606a&#34;&gt;// update total bitmap size&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;newSize&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt; size&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;size&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; newSize&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;size&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height &lt;span style=&#34;color:#1f2328&#34;&gt;+=&lt;/span&gt; newSize&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#57606a&#34;&gt;// copy all the bitmaps into one large bitmap&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Bitmap bitmapComplete &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; Bitmap&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;size&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; size&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Height&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Graphics g &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; Graphics&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;FromImage&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;bitmapComplete&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; height &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; i &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;++&lt;/span&gt;i&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;g&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DrawImageUnscaled&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;bitmaps&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;i &lt;span style=&#34;color:#1f2328&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; height&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;height &lt;span style=&#34;color:#1f2328&#34;&gt;+=&lt;/span&gt; bitmaps&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;i &lt;span style=&#34;color:#1f2328&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;].&lt;/span&gt;Height&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#57606a&#34;&gt;// bitmapComplete is ready for use &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#57606a&#34;&gt;// eg: pictureBox1.Image = bitmapComplete &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#57606a&#34;&gt;// eg: bitmapComplete.Save(@&amp;#34;C:\screenshot.jpg&amp;#34;, ImageFormat.Jpeg); &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://www.timvw.be/wp-content/images/datagridviews-without-scrollbars.jpg&#34; alt=&#34;image of generated screenshot&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>DataGridView with EditOnEnter as EditMode</title>
      <link>https://timvw.be/2006/09/16/datagridview-with-editonenter-as-editmode/</link>
      <pubDate>Sat, 16 Sep 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/09/16/datagridview-with-editonenter-as-editmode/</guid>
      <description>&lt;p&gt;Earlier this week i found that when a &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.datagridview.aspx&#34;&gt;DataGridView&lt;/a&gt; has it&amp;rsquo;s &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.datagridview.editmode.aspx&#34;&gt;EditMode&lt;/a&gt; property set to &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.datagridvieweditmode.aspx&#34;&gt;EditOnEnter&lt;/a&gt; the user cannot select an entire row by clicking on the row header. This prevents the user from being able to delete a row. A couple of websearches later i found a &lt;a href=&#34;http://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=98504&#34;&gt;bugreport&lt;/a&gt; but the proposed workarounds didn&amp;rsquo;t work for me 🙁 Here is a workaround that does work for me&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; dataGridView1_MouseClick&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; MouseEventArgs e &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;DataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;HitTestInfo hitInfo &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;HitTest&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;X&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Y&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; hitInfo&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Type &lt;span style=&#34;color:#1f2328&#34;&gt;==&lt;/span&gt; DataGridViewHitTestType&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;RowHeader &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;EditMode &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; DataGridViewEditMode&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;EditOnKeystrokeOrF2&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;EndEdit&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;EditMode &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; DataGridViewEditMode&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;EditOnEnter&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Drag and Drop on a DataGridView</title>
      <link>https://timvw.be/2006/09/16/drag-and-drop-on-a-datagridview/</link>
      <pubDate>Sat, 16 Sep 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/09/16/drag-and-drop-on-a-datagridview/</guid>
      <description>&lt;p&gt;Here is a bit of sample code that allows you to drag and drop a cellvalue in a DataGridView (don&amp;rsquo;t forget to set the AllowDrop property of the DataGridView to true). Notice that you need to translate the X and Y properties of the DragEventArgs first (unlike the X and Y properties of the MouseEventArgs)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; dataGridView1_MouseDown&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; MouseEventArgs e &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;DataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;HitTestInfo info &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;HitTest&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;X&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Y &lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; info&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;RowIndex &lt;span style=&#34;color:#1f2328&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; info&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;ColumnIndex &lt;span style=&#34;color:#1f2328&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;Object &lt;span style=&#34;color:#cf222e&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Rows&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;info&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;RowIndex&lt;span style=&#34;color:#1f2328&#34;&gt;].&lt;/span&gt;Cells&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;info&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;ColumnIndex&lt;span style=&#34;color:#1f2328&#34;&gt;].&lt;/span&gt;Value&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Rows&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;info&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;RowIndex&lt;span style=&#34;color:#1f2328&#34;&gt;].&lt;/span&gt;Cells&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;info&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;ColumnIndex&lt;span style=&#34;color:#1f2328&#34;&gt;].&lt;/span&gt;Value &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DoDragDrop&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; DragDropEffects&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Move &lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; dataGridView1_DragDrop&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; DragEventArgs e &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;Point p &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;PointToClient&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; Point&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;X&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Y &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;DataGridView&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;HitTestInfo info &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;HitTest&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; p&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;X&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; p&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Y &lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; info&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;RowIndex &lt;span style=&#34;color:#1f2328&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; info&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;ColumnIndex &lt;span style=&#34;color:#1f2328&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;Object &lt;span style=&#34;color:#cf222e&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;Object&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Data&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;GetData&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;typeof&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Rows&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;info&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;RowIndex&lt;span style=&#34;color:#1f2328&#34;&gt;].&lt;/span&gt;Cells&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;info&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;ColumnIndex&lt;span style=&#34;color:#1f2328&#34;&gt;].&lt;/span&gt;Value &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; dataGridView1_DragEnter&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; DragEventArgs e &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;e&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Effect &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; DragDropEffects&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Move&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Inconsistent Drag and Drop API</title>
      <link>https://timvw.be/2006/09/16/inconsistent-drag-and-drop-api/</link>
      <pubDate>Sat, 16 Sep 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/09/16/inconsistent-drag-and-drop-api/</guid>
      <description>&lt;p&gt;Every System.Windows.Forms.Control has the following events&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;public event DragEventHandler &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.control.dragdrop.aspx&#34;&gt;DragDrop&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;public event DragEventHandler &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.control.dragenter.aspx&#34;&gt;DragEnter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;public event EventHandler &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.control.dragleave.aspx&#34;&gt;DragLeave&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;public event DragEventHandler &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.control.dragover.aspx&#34;&gt;DragOver&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This means, when the user drags something away of the control, you can&amp;rsquo;t access the data anymore (unless you cached it somewhere when the DragEnter or DragOver events occured). Here is an extract from Microsoft patterns and practives on &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/ms229011.aspx&#34;&gt;Event Design&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;div&gt;&#xA;  If you define an event that takes an EventArgs instance instead of a derived class that you define, you cannot add data to the event in later versions. For that reason, it is preferable to create an empty derived class of EventArgs. This allows you add data to the event in later versions without introducing breaking changes.&#xA;&lt;/div&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Adding DataGridViewColumns (lots of them)</title>
      <link>https://timvw.be/2006/09/14/adding-datagridviewcolumns-lots-of-them/</link>
      <pubDate>Thu, 14 Sep 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/09/14/adding-datagridviewcolumns-lots-of-them/</guid>
      <description>&lt;p&gt;Last couple of days i&amp;rsquo;ve been trying to add a couple (750+) columns into a DataGridView. Initially i tried the following&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;ColumnCount &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;750&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The code above results in the following error: &lt;strong&gt;Sum of the columns&amp;rsquo; FillWeight values cannot exceed 65535.&lt;/strong&gt; Then i tried the following&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DataGridViewColumn&lt;span style=&#34;color:#1f2328&#34;&gt;[]&lt;/span&gt; columns &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; DataGridViewColumn&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;750&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; i &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt; columns&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Length&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;++&lt;/span&gt;i &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;DataGridViewColumn column &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; DataGridViewColumn&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;column&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;CellTemplate &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; DataGridViewTextBoxCell&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;column&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;FillWeight &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; columns&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#1f2328&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; column&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridView1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Columns&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;AddRange&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; columns &lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This results in the following error: &lt;strong&gt;At least one of the DataGridView control&amp;rsquo;s columns has no cell template.&lt;/strong&gt; Thus i tried the following&lt;/p&gt;</description>
    </item>
    <item>
      <title>Implementing Master/Detail for Custom Objects with DataGridViewComboBoxColumns</title>
      <link>https://timvw.be/2006/09/10/implementing-master/detail-for-custom-objects-with-datagridviewcomboboxcolumns/</link>
      <pubDate>Sun, 10 Sep 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/09/10/implementing-master/detail-for-custom-objects-with-datagridviewcomboboxcolumns/</guid>
      <description>&lt;p&gt;Imagine you have the following two classes&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;Parent&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; id&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; name&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; Parent&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; id&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; name &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;id &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; id&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; name&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; Id &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;id&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; Name &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;name&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;Child&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; Parent &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; parentId&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; Child&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; id&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; parentId&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;string&lt;/span&gt; name &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; id&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; name &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;parentId &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; parentId&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; ParentId &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;parentId&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the first ComboBoxColumn you display a list of possible Parents. In the second ComboBoxColumn you display Children, but only those that belong to the Chosen Parent. Here is how it goes&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using DataGridViewComboBoxColumn with Custom Objects</title>
      <link>https://timvw.be/2006/09/10/using-datagridviewcomboboxcolumn-with-custom-objects/</link>
      <pubDate>Sun, 10 Sep 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/09/10/using-datagridviewcomboboxcolumn-with-custom-objects/</guid>
      <description>&lt;p&gt;Earlier today i was playing with the &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.datagridview.aspx&#34;&gt;DataGridView&lt;/a&gt; control. I wanted to have a couple of &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/xwx934x7.aspx&#34;&gt;DataGridViewComboBoxColumn&lt;/a&gt;s in order to limit the available input options for the user. The documentation clearly mentions the following&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;div&gt;&#xA;  The DataGridViewComboBoxColumn will only work properly if there is a mapping between all its cell values that are populated by the DataGridView.DataSource property and the range of choices populated either by the DataSource property or the Items property. If this mapping doesn&#39;t exist, the message &#34;An Error happened Formatting, Display&#34; will appear when the column is in view.&#xA;&lt;/div&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Here is sample of a custom object&lt;/p&gt;</description>
    </item>
    <item>
      <title>Selecting custom Objects from a ComboBox</title>
      <link>https://timvw.be/2006/09/03/selecting-custom-objects-from-a-combobox/</link>
      <pubDate>Sun, 03 Sep 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/09/03/selecting-custom-objects-from-a-combobox/</guid>
      <description>&lt;p&gt;Earlier this week someone asked me how he could select custom objects from a &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.combobox.aspx&#34;&gt;ComboBox&lt;/a&gt;. Here is the code he used&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; FillComboBoxPersons&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;List&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;person&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt; persons&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;comboBoxPersons&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Items&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Clear&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;comboBoxPersons&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Items&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Add&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;-- Select Person -------------&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;foreach&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; Person person &lt;span style=&#34;color:#cf222e&#34;&gt;in&lt;/span&gt; persons &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;comboBoxPersons&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Items&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Add&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; person&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Name &lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;comboBoxPersons&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;SelectedIndex &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In order to get the selected item he then used the &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.combobox.selectedindex.aspx&#34;&gt;SelectedIndex&lt;/a&gt; property to lookup the Person in a cache of the persons collection.&lt;/p&gt;&#xA;&lt;p&gt;Here is an approach that doesn&amp;rsquo;t require you to have a cache of the collection (Since the persons are already stored in the items)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Selecting custom Objects from a DataGridView</title>
      <link>https://timvw.be/2006/09/03/selecting-custom-objects-from-a-datagridview/</link>
      <pubDate>Sun, 03 Sep 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/09/03/selecting-custom-objects-from-a-datagridview/</guid>
      <description>&lt;p&gt;Here is a way that allows the user to select a row (custom object properties are used as column values) from a &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.datagridview.aspx&#34;&gt;DataGridView&lt;/a&gt; assuming that the &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.datagridview.selectionmode.aspx&#34;&gt;SelectionMode&lt;/a&gt; property is set FullRowSelect&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; FillDataGridViewPersons&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; List&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;person&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt; persons &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridViewPersons&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Rows&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Clear&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; i &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt; persons&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Count&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;++&lt;/span&gt;i &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridViewPersons&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Rows&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Add&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridViewPersons&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Rows&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#1f2328&#34;&gt;].&lt;/span&gt;Tag &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; persons&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#1f2328&#34;&gt;];&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridViewPersons&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Rows&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#1f2328&#34;&gt;].&lt;/span&gt;SetValues&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; persons&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#1f2328&#34;&gt;].&lt;/span&gt;Id&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; persons&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#1f2328&#34;&gt;].&lt;/span&gt;Name &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt; buttonDoSomething_Click&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;object&lt;/span&gt; sender&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; EventArgs e &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridViewPersons&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;SelectedRows&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Count &lt;span style=&#34;color:#1f2328&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#cf222e&#34;&gt;int&lt;/span&gt; selectedRowIndex &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridViewPersons&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;SelectedCells&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;].&lt;/span&gt;RowIndex&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;Person selectedPerson &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;Person&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;dataGridViewPersons&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Rows&lt;span style=&#34;color:#1f2328&#34;&gt;[&lt;/span&gt;selectedRowIndex&lt;span style=&#34;color:#1f2328&#34;&gt;].&lt;/span&gt;Tag&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;MessageBox&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Show&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; String&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Format&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;You selected the person with &#x9;} &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Windows Multimedia Video Capture</title>
      <link>https://timvw.be/2006/06/26/windows-multimedia-video-capture/</link>
      <pubDate>Mon, 26 Jun 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/06/26/windows-multimedia-video-capture/</guid>
      <description>&lt;p&gt;On my computer the &lt;a href=&#34;http://msdn.microsoft.com/library/default.asp?url=../../library/en-us/wia/wia/overviews/startpage.asp&#34;&gt;WIA (Windows Image Acquisition)&lt;/a&gt; API is SLOOOOOW. So i decided to give the &lt;a href=&#34;http://windowssdk.msdn.microsoft.com/en-us/library/ms713477(VS.80).aspx&#34;&gt;Windows Multimedia Video Capture&lt;/a&gt; API a try. I didn&amp;rsquo;t take long to &lt;a href=&#34;http://msdn.microsoft.com/library/default.asp?url=../../library/en-us/cpguide/html/cpconcreatingprototypesinmanagedcode.asp&#34;&gt;create the prototypes in Managed Code&lt;/a&gt; and &lt;a href=&#34;http://msdn.microsoft.com/library/en-us/cpguide/html/cpconcallingdllfunction.asp&#34;&gt;call the DLL functions&lt;/a&gt;. Everything runs really smooth now&amp;hellip; As always, feel free to download the &lt;a href=&#34;http://www.timvw.be/wp-content/code/csharp/testavicap32.zip&#34;&gt;testavicap32&lt;/a&gt; sources now!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windows Image Acquisition</title>
      <link>https://timvw.be/2006/06/24/windows-image-acquisition/</link>
      <pubDate>Sat, 24 Jun 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/06/24/windows-image-acquisition/</guid>
      <description>&lt;p&gt;Earlier today i decided to toy around with my webcam. A couple of websearches later i ended up at &lt;a href=&#34;http://msdn.microsoft.com/library/default.asp?url=../../library/en-us/wia/wia/overviews/startpage.asp&#34;&gt;WIA (Windows Image Acquisition)&lt;/a&gt;. I found a couple of articles (eg: &lt;a href=&#34;http://msdn.microsoft.com/coding4fun/someassemblyrequired/lookatme/default.aspx&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;http://blogs.msdn.com/robburke/archive/2005/09/21/472541.aspx&#34;&gt;here&lt;/a&gt;) that showed how to capture images. I wanted to display the caputered image in a &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/system.windows.forms.picturebox.aspx&#34;&gt;PictureBox&lt;/a&gt;. Unfortunately everybody seems to save the WIA.ImageFile to a file and then load the imagefile into a PictureBox. It&amp;rsquo;s obvious that i don&amp;rsquo;t want to save the image into a file first. Here is my workaround&lt;/p&gt;</description>
    </item>
    <item>
      <title>Removing selected items from a ListBox</title>
      <link>https://timvw.be/2006/02/16/removing-selected-items-from-a-listbox/</link>
      <pubDate>Thu, 16 Feb 2006 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2006/02/16/removing-selected-items-from-a-listbox/</guid>
      <description>&lt;p&gt;Today i was experimenting with a couple of windows controls. For some reason i wasn&amp;rsquo;t able to remove the selected items from a &lt;a href=&#34;http://msdn.microsoft.com/library/default.asp?url=../../library/en-us/cpref/html/frlrfsystemwindowsformslistboxmemberstopic.asp&#34;&gt;ListBox&lt;/a&gt;. Here is the code that didn&amp;rsquo;t work&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-vbnet&#34; data-lang=&#34;vbnet&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;For&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;Each&lt;/span&gt; index &lt;span style=&#34;color:#0550ae&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;Integer&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; ListBox1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;SelectedIndices&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;ListBox2&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Items&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Add&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;ListBox1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Items&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;index&lt;span style=&#34;color:#1f2328&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;ListBox1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Items&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Remove&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;index&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;End&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;For&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The problem is that when you remove an item from the collection the indices change. Here is a possible solution&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-vbnet&#34; data-lang=&#34;vbnet&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;Dim&lt;/span&gt; index &lt;span style=&#34;color:#0550ae&#34;&gt;As&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;Integer&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; ListBox1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;SelectedIndex&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;While&lt;/span&gt; index &lt;span style=&#34;color:#0550ae&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;-&lt;/span&gt;1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;ListBox2&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Items&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Add&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;ListBox1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Items&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;index&lt;span style=&#34;color:#1f2328&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;ListBox1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Items&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;Remove&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;index&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;index &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; ListBox1&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;SelectedIndex&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;End&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;While&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
