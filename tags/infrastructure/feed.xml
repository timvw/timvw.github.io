<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Infrastructure on Tim Van Wassenhove</title>
    <link>https://timvw.be/tags/infrastructure/</link>
    <description>Recent content in Infrastructure on Tim Van Wassenhove</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Mar 2025 11:34:12 +0100</lastBuildDate>
    <atom:link href="https://timvw.be/tags/infrastructure/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Managing Authentik with Terraform</title>
      <link>https://timvw.be/2025/03/18/managing-authentik-with-terraform/</link>
      <pubDate>Tue, 18 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://timvw.be/2025/03/18/managing-authentik-with-terraform/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In my &lt;a href=&#34;../../2025/03/17/setting-up-authentik-with-kubernetes-and-fluxcd/&#34;&gt;previous post&lt;/a&gt;, I detailed how to deploy &lt;a href=&#34;https://goauthentik.io/&#34;&gt;Authentik&lt;/a&gt; on Kubernetes using FluxCD for GitOps-driven management. Today, I&amp;rsquo;ll explore how to manage the configuration of your Authentik instance using Terraform, providing a complete infrastructure-as-code solution for your identity provider.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-terraform-for-authentik&#34;&gt;Why Terraform for Authentik?&lt;/h2&gt;&#xA;&lt;p&gt;While deploying Authentik with Kubernetes and FluxCD gives us a solid foundation, we still need to configure the actual identity provider - creating applications, setting up OAuth providers, configuring authorization policies, and more. This is where Terraform comes in.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
