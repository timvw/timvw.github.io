<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ASP.NET on Tim Van Wassenhove</title>
    <link>https://timvw.be/tags/asp.net/</link>
    <description>Recent content in ASP.NET on Tim Van Wassenhove</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Nov 2009 00:00:00 +0000</lastBuildDate><atom:link href="https://timvw.be/tags/asp.net/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Easy pattern for Control state</title>
      <link>https://timvw.be/2009/11/21/easy-pattern-for-control-state/</link>
      <pubDate>Sat, 21 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>https://timvw.be/2009/11/21/easy-pattern-for-control-state/</guid>
      <description>If you have decided that your WebControl requires to maintain it&amp;rsquo;s state you will want to figure out how to implement Control state. Most examples on the web will then create an array of objects and then hardcode the indices to find stuff back&amp;hellip; Simply define a serializable inner class and use that instead of the &amp;lsquo;magic array object&amp;rsquo;. Eg
class SilverlightHost : WebControl { [Serializable] class State { public object BaseState { get; set; } public string SilverlightUrl { get; set; } public string SilverlightErrorHandlerUrl { get; set; } public Dictionary&amp;lt;string, string&amp;gt; Parameters { get; set; } } protected override void OnInit(EventArgs e) { base.</description>
    </item>
    
    <item>
      <title>Exploring AJAX on the ASP.NET platform</title>
      <link>https://timvw.be/2008/12/14/exploring-ajax-on-the-asp.net-platform/</link>
      <pubDate>Sun, 14 Dec 2008 00:00:00 +0000</pubDate>
      
      <guid>https://timvw.be/2008/12/14/exploring-ajax-on-the-asp.net-platform/</guid>
      <description>I finally found some time to experiment with AJAX on the ASP.NET platform. The first technique i looked into was Partial-Page Rendering with controls like UpdatePanel. It gave me an awkward feeling but even Dino Esposito, who spent a whole chapter on this technique in his book, seems to share that feeling.
Page methods, public static methods that are decorated with the WebMethodAttribute declared on a Page are exposed as a WebService method and return the result as JSON.</description>
    </item>
    
    <item>
      <title>How does the controller know which action method to invoke?</title>
      <link>https://timvw.be/2008/10/15/how-does-the-controller-know-which-action-method-to-invoke/</link>
      <pubDate>Wed, 15 Oct 2008 00:00:00 +0000</pubDate>
      
      <guid>https://timvw.be/2008/10/15/how-does-the-controller-know-which-action-method-to-invoke/</guid>
      <description>Yesterday i attended another great VISUG event on ASP.NET presented by Maarten Balliauw. He demonstrated a custom filter but did not dig into the mechanics of action method resolving. With the aid of of the ActionName attribute we can map different methods to the same action. The following methods will all map to the same &amp;ldquo;Detail&amp;rdquo; action
public ActionResult Detail(int productId) { ... } public ActionResult Detail(int productId, string name) { .</description>
    </item>
    
    <item>
      <title>Adaptive control behavior: LinkButton without javascript</title>
      <link>https://timvw.be/2008/10/14/adaptive-control-behavior-linkbutton-without-javascript/</link>
      <pubDate>Tue, 14 Oct 2008 00:00:00 +0000</pubDate>
      
      <guid>https://timvw.be/2008/10/14/adaptive-control-behavior-linkbutton-without-javascript/</guid>
      <description>&amp;lsquo;Experiment with Adaptive Control Behavior&amp;rsquo; has been an item on my TO-DO list for a very long time and this weekend i finally found some time to do exactly that. Because i hate it that a LinkButton renders as i decided to develop a ControlAdapter that makes the LinkButton work without JavaScript. While i was at it i also wrote adapters for the LoginStatus and Login controls. Feel free to play with the Adaptive Rendering Demo.</description>
    </item>
    
  </channel>
</rss>
