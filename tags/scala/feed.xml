<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>scala on Tim Van Wassenhove</title>
    <link>https://timvw.be/tags/scala/</link>
    <description>Recent content in scala on Tim Van Wassenhove</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Jan 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://timvw.be/tags/scala/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Composing functions and leveraging scala.util.Try</title>
      <link>https://timvw.be/post/2016-01-29-composing-functions-and-leveraging-scala-util-try/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://timvw.be/post/2016-01-29-composing-functions-and-leveraging-scala-util-try/</guid>
      <description>Last couple of days I have been hacking around trying to find a cute way to express the intent of my code. Typically it involves parsing some input, validating whatever rules that are in charge and persisting some values. In scala one can compose such a function by using the andThen method. Here is a concrete example:
def id(x: String) = x def parseInput = id _ def validate = id _ def persist = id _ def usecase1 = parseInput andThen validate andThen persist Inspired by the excellent series on Railway Oriented Programming series by Scott Wlaschin I wanted to take advange of scala.</description>
    </item>
    
    <item>
      <title>Using Gson to serialize Scala objects</title>
      <link>https://timvw.be/post/2016-01-14-using-gson-to-serialize-scala-objects/</link>
      <pubDate>Thu, 14 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://timvw.be/post/2016-01-14-using-gson-to-serialize-scala-objects/</guid>
      <description>gson is a pretty nice library that converts Java objects into JSON and back. When using this library from Scala things become a bit harder (eg: Plenty of people have difficulties when their scala object has an (im)mutable Map or List).
Here is an example to convert a JSON object to a Map[String,String]:
import com.google.gson.Gson import scala.collection.JavaConversions._ val mapJson = &amp;#34;{ &amp;#39;a&amp;#39;: &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;: &amp;#39;d&amp;#39; }&amp;#34; val map = new Gson().</description>
    </item>
    
    <item>
      <title>Scaffolding scala projects</title>
      <link>https://timvw.be/post/2015-08-19-scaffolding-scala-projects/</link>
      <pubDate>Wed, 19 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://timvw.be/post/2015-08-19-scaffolding-scala-projects/</guid>
      <description>These days the cool kids scaffold their projects with Yeoman. Obviously I could not stay behind, so here is my first generator for scala.</description>
    </item>
    
  </channel>
</rss>
